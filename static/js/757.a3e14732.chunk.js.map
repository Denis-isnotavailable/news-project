{"version":3,"file":"static/js/757.a3e14732.chunk.js","mappings":"wPA2DA,EAtDuB,SAAjBA,EAAkB,GAAiB,IAAD,IAAfC,KAAAA,OAAe,MAAR,GAAQ,EACpC,GAAgCC,EAAAA,EAAAA,UAAS,IAAzC,eAAOC,EAAP,KAAiBC,EAAjB,KACA,GAAgDF,EAAAA,EAAAA,WAAS,GAAzD,eAAOG,EAAP,KAAyBC,EAAzB,KAgBA,OAdAC,EAAAA,EAAAA,YAAU,WACN,IAAMC,EAAS,mCAAG,qGAEQC,EAAAA,EAAAA,IAAcR,GAFtB,OAERS,EAFQ,OAIdN,EAAYM,GAJE,2CAAH,qDAOfF,GAEH,GAAE,IAEHG,QAAQC,IAAIT,IAGR,gCAEsB,IAAhBF,EAAKY,QACH,oBACIC,KAAK,SACLC,QAAS,kBAAMT,GAAoB,SAAAU,GAAI,OAAKA,CAAL,GAA9B,EAFb,8BAIsBf,EAAKY,OAJ3B,QAOA,oBACIC,KAAK,SADT,gCAGwBb,EAAKY,OAH7B,QAMFR,IACE,wBACIF,EAASc,KAAI,SAAAC,GACT,OACI,gBAAiBC,MAAO,CAACC,YAAa,QAAtC,WACI,yBAAMF,EAAIG,QACV,gFACEH,EAAIjB,OAAQ,SAACD,EAAD,CAAgBsB,UAAWJ,EAAIK,GAAItB,KAAI,OAAEiB,QAAF,IAAEA,OAAF,EAAEA,EAAKjB,SAHvDiB,EAAIK,GAMpB,QAOpB,E,kBCvDYC,E,OAAiBC,GAAAA,IAAH,8MC2D3B,EArDiB,WAAO,IAAD,EACXF,GAAOG,EAAAA,EAAAA,MAAPH,GACR,GAAwBrB,EAAAA,EAAAA,UAAS,CAAC,GAAlC,eAAOyB,EAAP,KAAaC,EAAb,KACA,GAAgC1B,EAAAA,EAAAA,UAAS,IAAzC,eAAOC,EAAP,KAAiBC,EAAjB,KAEMyB,EADO,IAAIC,KAAKH,EAAKI,KAAO,OAChBC,WAAWC,MAAM,KAAKC,MAAM,EAAG,GAkBjD,OAhBA3B,EAAAA,EAAAA,YAAU,WACN,IAAMC,EAAS,mCAAG,uGACK2B,EAAAA,EAAAA,GAAaZ,GADlB,cACRa,EADQ,iBAEQ3B,EAAAA,EAAAA,IAAc2B,EAAKnC,MAF3B,OAERS,EAFQ,OAGdkB,EAAQQ,GACRhC,EAAYM,GAJE,2CAAH,qDAOfF,GAEH,GAAE,IAEHG,QAAQC,IAAIT,IAKR,UAACqB,EAAD,YACI,wBAAKG,EAAKU,SACV,cAAGC,KAAMX,EAAKY,IAAd,SAAoBZ,EAAKY,OACzB,uCAAeV,EAAKW,KAAK,SACzB,oCAAYb,EAAKc,OACjB,uCAAed,EAAK1B,KAAL,UAAY0B,EAAK1B,YAAjB,aAAY,EAAWY,OAAS,EAA/C,QACA,wBACKV,EAASc,KAAI,SAAAyB,GACV,IACMb,EADO,IAAIC,KAAKY,EAAQX,KAAO,OACnBC,WAAWC,MAAM,KAAKC,MAAM,EAAG,GACjD,OACI,2BACI,4BACI,oCAAYQ,EAAQD,OACpB,uBAAIZ,EAAKW,KAAK,WAElB,uBAAIE,EAAQrB,QACZ,yBAAOqB,EAAQC,MAAQD,EAAQE,WAAY,yDAE3C,SAAC,EAAD,CAAgBtB,UAAWoB,EAAQnB,GAAItB,KAAI,OAAEyC,QAAF,IAAEA,OAAF,EAAEA,EAASzC,SARjDyC,EAAQnB,GAYxB,QAIhB,C","sources":["components/DiscussionArea/DiscussionArea.jsx","pages/PostPage/PostPage.styled.jsx","pages/PostPage/PostPage.jsx"],"sourcesContent":["import { useEffect } from \"react\";\nimport { useState } from \"react\";\nimport { fetchComments } from \"redux/operations\";\n\n\nconst DiscussionArea = ({kids = []}) => {\n    const [comments, setComments] = useState([]);\n    const [isDiscussionOpen, setIsDiscussionOpen] = useState(false);    \n\n    useEffect(() => {\n        const fetchPost = async () => {\n            // const data = await fetchOnePost(commentId);\n            const comData = await fetchComments(kids);\n            // setPost(data)\n            setComments(comData);\n        }\n\n        fetchPost();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [])\n\n    console.log(comments);\n\n    return (\n        <>\n\n            { kids.length !== 0 ?\n                <button\n                    type=\"button\"\n                    onClick={() => setIsDiscussionOpen(prev => !prev)}\n                >\n                    open discussion ({kids.length})\n                </button>\n                :\n                <button\n                    type=\"button\"                    \n                >\n                    no discussion yet ({kids.length})\n                </button>\n            }\n            {!isDiscussionOpen ||\n                <ul>{\n                    comments.map(com => {\n                        return (\n                            <li key={com.id} style={{paddingLeft: '36px'}}>\n                                <div>{com.text}</div>\n                                <p>---------------------------------------------------</p>\n                                {!com.kids || <DiscussionArea commentId={com.id} kids={com?.kids}/>}\n\n                            </li>)\n                    })\n                }</ul>\n            }\n            \n        </>\n        \n    );\n}\n\nexport default DiscussionArea;","import styled from \"styled-components\";\n\nexport const PostPageStyled = styled.div`\n    padding: 40px;\n\n    div{\n        display: flex;\n        justify-content: space-between;\n        margin-bottom: 8px;\n    }\n\n    li {\n        margin-bottom: 16px;\n    }\n`;","import DiscussionArea from \"components/DiscussionArea/DiscussionArea\";\nimport { useEffect } from \"react\";\nimport { useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { fetchComments, fetchOnePost } from \"redux/operations\";\nimport { PostPageStyled } from \"./PostPage.styled\";\n\n\nconst PostPage = () => {\n    const { id } = useParams();\n    const [post, setPost] = useState({});\n    const [comments, setComments] = useState([]);\n    const time = new Date(post.time + 1500000000000);\n    const date = time.toString().split(' ').slice(1, 5);    \n\n    useEffect(() => {\n        const fetchPost = async () => {\n            const data = await fetchOnePost(id);\n            const comData = await fetchComments(data.kids);\n            setPost(data)\n            setComments(comData);\n        }\n\n        fetchPost();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [])\n\n    console.log(comments);\n    // console.log(post);\n    \n\n    return (\n        <PostPageStyled>\n            <h2>{post.title}</h2>\n            <a href={post.url}>{post.url}</a>\n            <p>Post date: {date.join(' ')}</p>\n            <p>Author: {post.by}</p>\n            <h3>Comments ({post.kids ? post.kids?.length : 0})</h3>            \n            <ul>\n                {comments.map(comment => {\n                    const time = new Date(comment.time + 1500000000000);\n                    const date = time.toString().split(' ').slice(1, 5);\n                    return (\n                        <li key={comment.id}>\n                            <div>\n                                <p>Author: {comment.by}</p>\n                                <p>{date.join(' ')}</p>\n                            </div>\n                            <p>{comment.text}</p>\n                            <p>{ !(comment.dead || comment.deleted) || <>comment was deleted</>  }</p>                            \n\n                            <DiscussionArea commentId={comment.id} kids={comment?.kids} />\n                            \n                        </li>\n                    );\n                })}\n            </ul>\n        </PostPageStyled>\n    );\n}\n\nexport default PostPage;"],"names":["DiscussionArea","kids","useState","comments","setComments","isDiscussionOpen","setIsDiscussionOpen","useEffect","fetchPost","fetchComments","comData","console","log","length","type","onClick","prev","map","com","style","paddingLeft","text","commentId","id","PostPageStyled","styled","useParams","post","setPost","date","Date","time","toString","split","slice","fetchOnePost","data","title","href","url","join","by","comment","dead","deleted"],"sourceRoot":""}