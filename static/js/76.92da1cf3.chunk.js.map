{"version":3,"file":"static/js/76.92da1cf3.chunk.js","mappings":"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","sources":["pages/PostPage/PostPage.styled.jsx","components/DiscussionArea/DiscussionArea.styled.jsx","components/DiscussionArea/DiscussionArea.jsx","pages/PostPage/PostPage.jsx"],"sourcesContent":["import styled from \"styled-components\";\nimport { NavLink } from \"react-router-dom\";\n\nexport const PostPageStyled = styled.div`\n    padding: 40px;\n\n    h2 {\n        margin-bottom: 12px;\n        padding: 8px;\n        border: 1px solid #c1bebe;\n    }\n\n    a {\n        display: block;\n        margin-bottom: 12px;\n        padding: 8px;\n        border: 1px solid #c1bebe;\n    }\n\n    p {\n        font-size: 12px;\n    }\n\n    ul {\n        list-style: none;\n    }\n\n    li {\n        margin-bottom: 16px;\n    }\n`;\n\nexport const TextContainer = styled.div`    \n    margin-bottom: 12px;\n    padding: 8px;\n    border: 1px solid #c1bebe;\n\n    p {\n        margin-bottom: 8px;\n        font-size: 16px;\n    }\n`;\n\nexport const AuthorContainer = styled.div`\n    display: flex;\n    justify-content: space-between;\n    margin-bottom: 8px;\n    color: #701515;\n`;\n\nexport const CommentsContainer = styled.div`\n    display: flex;\n    position: relative;\n    justify-content: center;\n    align-items: baseline;\n    margin-bottom: 12px;\n    padding: 8px;\n\n    button {\n        position: absolute;\n        top: 8px;\n        right: 8px;\n        border: 1px solid #c1bebe;\n        border-radius: 5px;\n        background-color: #f1d0df;\n        cursor: pointer;\n        transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1)\n    }\n\n    button:hover {        \n        background-color: #a0e4f5;\n    }\n`;\n\nexport const BackButton = styled(NavLink)`\n    width: 90px;\n    margin-bottom: 20px;\n    padding: 12px 20px 12px 20px;\n    text-align: center;\n    border-radius: 10px;\n    border: 1px solid #c1bebe;\n    font-size: 20px;\n    font-weight: 700;\n    color: #000000;    \n    text-decoration: none;\n    cursor: pointer;\n    transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n    :hover {\n        background-color: #c1bebe;\n    }\n`;","import styled from \"styled-components\";\n\nexport const DiscussionAreaStyled = styled.div`\n    ul {\n        margin-top: 8px;\n    }\n    button {\n        margin-top: 8px;\n        font-size: 12px;\n        border-radius: 5px;\n        cursor: pointer;\n        transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1)\n    }\n\n    button:hover {        \n        background-color: #a0e4f5;\n    }\n`;","import { AuthorContainer } from \"pages/PostPage/PostPage.styled\";\nimport { useEffect } from \"react\";\nimport { useState } from \"react\";\nimport { fetchComments } from \"redux/operations\";\nimport { DiscussionAreaStyled } from \"./DiscussionArea.styled\";\n\n\nconst DiscussionArea = ({kids = []}) => {\n    const [comments, setComments] = useState([]);\n    const [isDiscussionOpen, setIsDiscussionOpen] = useState(false);    \n\n    useEffect(() => {\n        const fetchPost = async () => {\n            const comData = await fetchComments(kids);\n            setComments(comData);\n        }\n\n        fetchPost();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [])\n\n    // console.log(comments);\n\n    return (\n        <DiscussionAreaStyled>\n\n            { kids.length !== 0 ?\n                <button\n                    type=\"button\"\n                    onClick={() => setIsDiscussionOpen(prev => !prev)}\n                >\n                    open discussion ({kids.length})\n                </button>\n                :\n                <button\n                    type=\"button\"                    \n                >\n                    no discussion yet ({kids.length})\n                </button>\n            }\n            {!isDiscussionOpen ||\n                <ul>{\n                    comments.map(com => {\n                        const time = new Date(com.time + 1500000000000);\n                        const date = time.toString().split(' ').slice(1, 5);\n                        return (\n                            <li key={com.id} style={{ paddingLeft: '36px' }}>\n                                <AuthorContainer>\n                                    <p>Author: {com.by}</p>\n                                    <p>{date.join(' ')}</p>\n                                </AuthorContainer>\n                                <p>{com.text}</p>\n                                <p>{ !(com.dead || com.deleted) || <>comment was deleted</>  }</p>\n                                \n                                {!com.kids || <DiscussionArea commentId={com.id} kids={com?.kids}/>}\n\n                            </li>)\n                    })\n                }</ul>\n            }\n            \n        </DiscussionAreaStyled>\n        \n    );\n}\n\nexport default DiscussionArea;","import DiscussionArea from \"components/DiscussionArea/DiscussionArea\";\nimport { useEffect } from \"react\";\nimport { useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { fetchComments, fetchOnePost } from \"redux/operations\";\nimport { AuthorContainer, BackButton, CommentsContainer, PostPageStyled, TextContainer } from \"./PostPage.styled\";\n\n\nconst PostPage = () => {\n    const { id } = useParams();\n    const [post, setPost] = useState({});\n    const [comments, setComments] = useState([]);\n    const time = new Date(post.time + 1500000000000);\n    const date = time.toString().split(' ').slice(1, 5);    \n\n    useEffect(() => {\n        const fetchPost = async () => {\n            const data = await fetchOnePost(id);\n            const comData = await fetchComments(data.kids);\n            setPost(data)\n            setComments(comData);\n        }\n\n        fetchPost();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [])\n\n    // console.log(comments);\n    // console.log(post);\n\n    const updateComments = async () => {\n        const data = await fetchOnePost(id);\n        const comData = await fetchComments(data.kids);\n        setPost(data)\n        setComments(comData);\n    }\n    \n\n    return (\n        <>\n            {!post.title ? <div>Loading...</div> :\n                <PostPageStyled>\n                    <BackButton to={'/'} >Go Back</BackButton>\n\n                    <h2>{post.title}</h2>\n                    <a href={post.url}>{post.url}</a>\n\n                    <TextContainer>\n                        <p>Author: {post.by}</p>\n                        <p>Post date: {date.join(' ')}</p>\n                    </TextContainer>\n\n                    <CommentsContainer>\n                        <h3>Comments ({post.kids ? post.kids?.length : 0})</h3>\n                        <button type=\"button\" onClick={updateComments}>Update comments</button>\n                    </CommentsContainer> \n\n                    <ul>\n                        {comments.map(comment => {\n                            const time = new Date(comment.time + 1500000000000);\n                            const date = time.toString().split(' ').slice(1, 5);\n                            return (\n                                <li key={comment.id}>\n                                    <AuthorContainer>\n                                        <p>Author: {comment.by}</p>\n                                        <p>{date.join(' ')}</p>\n                                    </AuthorContainer>\n                                    <p>{comment.text}</p>\n                                    <p>{!(comment.dead || comment.deleted) || <>comment was deleted</>}</p>\n\n                                    <DiscussionArea commentId={comment.id} kids={comment?.kids} />\n                            \n                                </li>\n                            );\n                        })}\n                    </ul>\n                </PostPageStyled>\n            }\n        </>\n    );\n}\n\nexport default PostPage;"],"names":["PostPageStyled","styled","TextContainer","AuthorContainer","CommentsContainer","BackButton","NavLink","DiscussionAreaStyled","DiscussionArea","kids","useState","comments","setComments","isDiscussionOpen","setIsDiscussionOpen","useEffect","fetchPost","fetchComments","comData","length","type","onClick","prev","map","com","date","Date","time","toString","split","slice","style","paddingLeft","by","join","text","dead","deleted","commentId","id","useParams","post","setPost","fetchOnePost","data","updateComments","title","to","href","url","comment"],"sourceRoot":""}